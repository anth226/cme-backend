# Use postgres/example user/password credentials
version: '3.1'

x-volumes: &volumes
  volumes:
    - ./apps:/home/node/app/apps:rw
    - ./db:/home/node/app/db:rw
    - ./config:/home/node/app/config:rw
    - ./libs:/home/node/app/libs:rw
    - ./migrations:/home/node/app/migrations:rw
    - ./package.json:/home/node/app/package.json:rw

x-depends: &depends
  depends_on:
    - api

x-build: &build
  context: .

services:
  api:
    container_name: api
    command:
      - migrate
    build:
      <<: *build
      args:
        ENV: ${ENV}
        SERVICE: api
    ports:
      - "3000:3000"
    <<: *volumes

  ups:
    container_name: ups
    build:
      <<: *build
      args:
        ENV: ${ENV}
        SERVICE: ups
    ports:
      - "3001:3001"
    <<: *volumes
    <<: *depends

  uprod:
    container_name: uprod
    build:
      <<: *build
      args:
        ENV: ${ENV}
        SERVICE: up
    ports:
      - "3002:3002"
    <<: *volumes
    <<: *depends

  battles-manager:
    container_name: bm
    build:
      <<: *build
      args:
        ENV: ${ENV}
        SERVICE: bm
    ports:
      - "3003:3003"
    <<: *volumes
    <<: *depends

  resources-ms:
    container_name: resources-ms
    build:
      <<: *build
      args:
        ENV: ${ENV}
        SERVICE: resources-ms
    ports:
      - "3004:3004"
    <<: *volumes
    <<: *depends

  blockchain-ms:
    container_name: blockchain-ms
    build:
      <<: *build
      args:
        ENV: ${ENV}
        SERVICE: blockchain-ms
    ports:
      - "3005:3005"
    <<: *volumes
    <<: *depends

  db:
    container_name: pg
    image: postgres:13.2
    restart: always
    environment:
      POSTGRES_PASSWORD: example
      NODE_ENV: ${ENV}
    ports:
      - "5433:5432"
    working_dir: /home
    volumes:
      - ./db/snapshots:/docker-entrypoint-initdb.d
      - ./db/bin:/home/bin

  adminer:
    container_name: adminer
    environment:
      NODE_ENV: ${ENV}
    image: adminer
    restart: always
    ports:
      - "8081:8080"

  redis:
    container_name: redis
    image: redis:6.2-buster
    command: redis-server --requirepass 96104305cdf1e02badc378cef3f60f23319d1600a6de13f71f120e476061dba3
    restart: always
    environment:
      NODE_ENV: ${ENV}
    sysctls:
      net.core.somaxconn: 511
    ports:
      - "6379:6379"
